<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.acmed.his.dao.PermissionMapper">
    <resultMap id="permission" type="com.acmed.his.model.Permission">
        <id property="id" column="id"></id>
        <result property="perCode" column="percode"></result>
        <result property="perName" column="pername"></result>
        <result property="perDesc" column="perdesc"></result>
        <result property="category" column="category"></result>
    </resultMap>

    <select id="getPermissionByRole" parameterType="java.lang.Integer" resultMap="permission">
        select id,percode,pername,perdesc, category from t_p_s_permission
        where id in (select pid from t_p_s_role_vs_permission where rid = #{rid})
    </select>

    <select id="hasPermission" resultType="java.lang.Integer">
        select count(1) from t_p_s_permission where pid in (
            select per.id from t_p_s_user_vs_role ur
            join t_p_s_role role on ur.rid = role.id
            join t_p_s_role_vs_permission rp on role.id = rp.rid
            join t_p_s_permission per on rp.pid = per.id
            where ur.uid = #{uid} and role.removed = '0' and role.isvalid = '1'
        ) and  url = #{path}

    </select>

    <select id="hasMenu" resultType="java.lang.Integer">
		SELECT count(1)
		FROM t_p_s_user_vs_role ur
		JOIN t_p_s_role role ON ur.rid = role.id
		JOIN t_p_s_role_vs_permission rp ON role.id = rp.rid
		JOIN t_p_s_permission per ON rp.pid = per.id
		WHERE ur.uid = #{uid} AND role.removed = '0' AND role.isvalid = '1'
		AND perCode = #{perCode}
</select>

    <select id="getBasePermission" resultType="com.acmed.his.model.Permission">
      select * from t_p_s_permission where pid is null and hideflag = '0'
      <if test="filterZy == true">
          AND perCode != 'yyf'
      </if>
      order by sn asc
    </select>

    <select id="getPermissionByPid" resultType="com.acmed.his.model.Permission">
        select * from t_p_s_permission where pid = #{pid}
        <if test="@Ognl@isNotEmpty(orgCode)">
            AND hideflag = 0
        </if>
        order by sn asc
    </select>

    <select id="getNeedFilterPermissionList" resultType="com.acmed.his.model.Permission">
        select * from t_p_s_permission where url is not null
    </select>


    <select id="getPermissionByUserId" resultType="com.acmed.his.model.Permission">
        select per.* from t_p_s_user_vs_role ur
        join t_p_s_role role on ur.rid = role.id
        join t_p_s_role_vs_permission rp on role.id = rp.rid
        join t_p_s_permission per on rp.pid = per.id
        where ur.uid = #{uid} and role.removed = '0' and role.isvalid = '1'
        <if test="isAdmin == false">
            and per.hideflag = 0
        </if>
        <if test="filterZy == true">
            AND per.perCode not in ('yyf','yyfdd','shqr','hzff')
        </if>
        order by pid asc , sn asc
    </select>
</mapper>