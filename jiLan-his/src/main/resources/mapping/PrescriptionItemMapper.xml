<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.acmed.his.dao.PrescriptionItemMapper">


    <delete id="delByPreId" parameterType="java.lang.String">
        DELETE from t_b_prescription_item where prescriptionid = #{prescriptionId}
    </delete>

    <select id="getItemList" resultType="com.acmed.his.model.dto.DrugDayDetailDto">
        select t1.num as num,t3.specname as drugname , t2.createat as date
        from t_b_prescription_item t1
        LEFT JOIN t_b_prescription t2 on t1.prescriptionid = t2.id
        LEFT JOIN t_b_drugdict t3 on t1.drugcode = t3.code
        where t2.orgcode = #{orgCode}
        <if test="@Ognl@isNotEmpty(startTime)">
            <![CDATA[ AND t2.createat >= #{startTime} ]]>
        </if>
        <if test="@Ognl@isNotEmpty(endTime)">
            <![CDATA[  AND t2.createat <= #{endTime} ]]>
        </if>
    </select>


    <select id="getItemTotal" resultType="java.lang.Integer">
        select count(1) FROM t_b_prescription_item t1
        LEFT JOIN t_b_prescription t2 on t1.prescriptionid = t2.id
        where t2.orgcode = #{orgCode}
        <if test="@Ognl@isNotEmpty(startTime)">
            <![CDATA[ AND t2.createat >= #{startTime} ]]>
        </if>
        <if test="@Ognl@isNotEmpty(endTime)">
            <![CDATA[  AND t2.createat <= #{endTime} ]]>
        </if>
    </select>

    <select id = "getCurrentDayItemFee" resultType="java.lang.Double">
        select IFNULL(sum(t1.retailPrice * t1.num),0) from  t_b_prescription_item t1
        JOIN t_b_prescription t2 on t1.prescriptionid = t2.id
        where t2.orgcode = #{orgCode} and DATE_FORMAT(t2.createat,'%Y-%m-%d') = DATE_FORMAT(NOW(),'%Y-%m-%d')
    </select>

    <select id="getRefundList" resultType="java.util.Map">
      select * from (
            select sum(fee) as fee,groupnum as groupNum from (
                select sum(fee) as fee,groupnum from t_b_prescription_item where applyid = #{applyId} and paystatus = '1'
                group by groupnum
                UNION ALL
                select sum(fee),groupnum from t_b_inspect where applyid = #{applyId} and paystatus = '1'
                group by groupnum
                UNION ALL
                select sum(fee),groupnum from t_b_charge where applyid = #{applyId} and paystatus = '1'
                group by groupnum
            )t1 GROUP BY groupnum
        )t0 order by t0.groupnum asc
    </select>

    <update id="refund">
        update t_b_prescription_item set paystatus = 2 where applyid = #{applyId}
        and groupnum IN
        <foreach collection="groupNums" item="groupNum" open="(" close=")" separator=",">
            #{groupNum}
        </foreach>
    </update>
</mapper>